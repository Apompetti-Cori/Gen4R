---
title: "Summary Gen4R"
execute:
  echo: false
author: Anthony Pompetti
date: "today"
date-format: long
format: 
  pdf:
    toc: true
---

```{r setup, include = FALSE}
library(tidyverse)
library(here)
library(ggplot2)
library(data.table)
library(gt)
library(ggridges)
```

## Terminology {style="font-size: 16px;"}
- three_present_three
  - Three variants present and all three samples have matching GT
- three_present_two
  - Three variants present and two samples have matching GT
- three_present_zero
  - Three variants present and zero samples have matching GT
- two_present_two
  - Two variants present and two samples have matching GT
- two_present_zero
  - Two variants present and zero samples have matching GT
- one_present
  - One variant present

## Sample Layout
- HG002
  - HM24385: LCL
  - HM26105: iPSC from LCL
  - HM27730: iPSC from PBMC

- HG004
  - HM24143: LCL
  - HM26077: iPSC from LCL

- HG005
  - HM24631: LCL
  - HM26107: iPSC from LCL

- Fibroblast
  - HM20431: LCL from Fibroblast
  - HM23248_2: 
  - HM23338: iPSC from Fibroblast

## Compare HG002: HM24385, HM26105, HM27730 {style="font-size: 16px;"}

- HM24385: LCL
- HM26105: iPSC from LCL
- HM27730: iPSC from PBMC

```{r, include = FALSE}
stats <- readRDS(here("results/08/HG002/HG002_stats.rds"))
```

## Depth stats {.center}

```{r, include = FALSE}
data <- bind_rows(stats$dp_stats, .id = "id") %>%
    as_tibble(rownames = "chr_range") %>%
    pivot_longer(cols = c(-chr_range, -id), names_to = "sample", values_to = "value") %>%
    mutate(value = as.numeric(value)) %>%
    data.frame()
```

## Depth quantiles (per match status) {style="font-size: 16px;"}

```{r}
tbl <- data %>% 
  group_by(id) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  mutate("% total" = (n/sum(.$n) * 100) %>% round(., 2)) %>%
  ungroup() %>%
  select(id, n, `% total`, everything())
  
lastidx <- nrow(tbl)+1
tbl[lastidx,"n"] <- sum(tbl$n)
tbl[lastidx,"id"] <- "total"

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## Depth quantiles (per match/sample status) {style="font-size: 16px;"}

```{r}
tbl <- data %>%
  filter(!is.na(value)) %>%
  group_by(id, sample) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, sample, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  ungroup() %>%
  group_by(sample) %>%
  mutate("% sample" = sum(n)) %>%
  group_by(id, sample) %>%
  mutate("% sample" = (n/`% sample` * 100) %>% round(.,2)) %>%
  ungroup() %>%
  select(id, sample, n, `% sample`, everything())

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## Depth Boxplots {style="font-size: 16px;"}

```{r, fig.width = 15, fig.height = 10}
input <- data %>%
  filter(!is.na(value)) %>%
  group_by(id) %>%
  mutate(n_id = length(unique(chr_range))) %>%
  ungroup() %>%
  group_by(id, sample) %>%
  mutate(
    n_id_samp = length(unique(chr_range)),
    Q75 = quantile(value, probs = 0.75),
    Q25 = quantile(value, probs = 0.25)
  ) %>%
  mutate(Whiskup = 1.05*(Q75 + 1.5*(Q75-Q25)))

input <- input %>% mutate(
  id = paste0(id," (n = ",n_id,")")
)

# Reorder levels for ID
id_levels <- c(
  grep(unique(input$id), pattern = "one_", value = TRUE), 
  grep(unique(input$id), pattern = "two_", value = TRUE),
  grep(unique(input$id), pattern = "three_", value = TRUE)
)

input <- input %>% 
  mutate(
    id = factor(id, levels = id_levels)
  )

# Reorder levels for Sample
sample_levels <- c(
  grep(unique(input$sample), pattern = "max|min", value = TRUE, invert = TRUE),
  "max",
  "min"
)

input <- input %>% 
  mutate(
    sample = factor(sample, levels = sample_levels)
  )

# Create label data
label_data <- input %>% 
  select(id, sample, n_id_samp, Q25, Q75, Whiskup) %>%
  distinct()

label_data <- label_data[order(label_data$id, label_data$sample),]

p <- ggplot(
    input,
    aes(
        x = sample,
        y = value
    )
) + 
ylab("depth") +
geom_boxplot(outliers = FALSE) +
facet_wrap(~id)

p <- p + 
  geom_text(
    data = label_data, aes(y = Whiskup, label = n_id_samp), position = position_dodge(width = .75)
  ) +
  coriell::theme_coriell()

suppressWarnings({
    print(p)
})
```

## Depth Histograms (per match status) {style="font-size: 16px;"}

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input %>% filter(value <= 75),
  aes(
    x = value,
    y = id
  )
) +
stat_binline(scale = 1, binwidth = 1) +
xlab("depth") +
coriell::theme_coriell()

p
```

## Depth Histograms (per match/sample status) {style="font-size: 16px;"}

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input %>% filter(value <= 75),
  aes(
    x = value,
    y = sample
  )
) +
stat_binline(scale = 1, binwidth = 1) +
xlab("depth") +
facet_wrap(~id) +
coriell::theme_coriell()

p
```

## GQ stats {.center}

```{r, include = FALSE}
data <- bind_rows(stats$gq_stats, .id = "id") %>%
    as_tibble(rownames = "chr_range") %>%
    pivot_longer(cols = c(-chr_range, -id), names_to = "sample", values_to = "value") %>%
    mutate(value = as.numeric(value)) %>%
    data.frame()
```

## GQ quantiles (per match status) {style="font-size: 16px;"}

```{r}
tbl <- data %>% 
  group_by(id) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  mutate("% total" = (n/sum(.$n) * 100) %>% round(., 2)) %>%
  ungroup() %>%
  select(id, n, `% total`, everything())
  
lastidx <- nrow(tbl)+1
tbl[lastidx,"n"] <- sum(tbl$n)
tbl[lastidx,"id"] <- "total"

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## GQ quantiles (per match/sample status) {style="font-size: 16px;"}

```{r}
tbl <- data %>%
  filter(!is.na(value)) %>%
  group_by(id, sample) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, sample, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  ungroup() %>%
  group_by(sample) %>%
  mutate("% sample" = sum(n)) %>%
  group_by(id, sample) %>%
  mutate("% sample" = (n/`% sample` * 100) %>% round(.,2)) %>%
  ungroup() %>%
  select(id, sample, n, `% sample`, everything())

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## GQ Boxplots {style="font-size: 16px;"}

```{r, fig.width = 15, fig.height = 10}
input <- data %>%
  filter(!is.na(value)) %>%
  group_by(id) %>%
  mutate(n_id = length(unique(chr_range))) %>%
  ungroup() %>%
  group_by(id, sample) %>%
  mutate(
    n_id_samp = length(unique(chr_range)),
    Q75 = quantile(value, probs = 0.75),
    Q25 = quantile(value, probs = 0.25)
  ) %>%
  mutate(Whiskup = 1.05*(Q75 + 1.5*(Q75-Q25)))

input <- input %>% mutate(
  id = paste0(id," (n = ",n_id,")")
)

# Reorder levels for ID
id_levels <- c(
  grep(unique(input$id), pattern = "one_", value = TRUE), 
  grep(unique(input$id), pattern = "two_", value = TRUE),
  grep(unique(input$id), pattern = "three_", value = TRUE)
)

input <- input %>% 
  mutate(
    id = factor(id, levels = id_levels)
  )

# Reorder levels for Sample
sample_levels <- c(
  grep(unique(input$sample), pattern = "max|min", value = TRUE, invert = TRUE),
  "max",
  "min"
)

input <- input %>% 
  mutate(
    sample = factor(sample, levels = sample_levels)
  )

# Create label data
label_data <- input %>% 
  select(id, sample, n_id_samp, Q25, Q75, Whiskup) %>%
  distinct()

label_data <- label_data[order(label_data$id, label_data$sample),]

p <- ggplot(
    input,
    aes(
        x = sample,
        y = value
    )
) + 
ylab("gq") +
geom_boxplot(outliers = FALSE) +
facet_wrap(~id)

p <- p + 
  geom_text(
    data = label_data, aes(y = Whiskup, label = n_id_samp), position = position_dodge(width = .75)
  ) +
  coriell::theme_coriell()

suppressWarnings({
    print(p)
})
```

## GQ Histograms (per match status)

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input,
  aes(
    x = value,
    y = id
  )
) +
stat_binline(scale = 1, binwidth = 1) +
coriell::theme_coriell()

p
```

## GQ Histograms (per match/sample status)

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input,
  aes(
    x = value,
    y = sample
  )
) +
stat_binline(scale = 1, binwidth = 1) +
facet_wrap(~id) +
coriell::theme_coriell()

p
```

## Compare HG004: HM24143, HM26077 {style="font-size: 16px;"}

- HM24143: LCL
- HM26077: iPSC from LCL

```{r, include = FALSE}
stats <- readRDS(here("results/08/HG004/HG004_stats.rds"))
```

## Depth stats {.center}

```{r, include = FALSE}
data <- bind_rows(stats$dp_stats, .id = "id") %>%
    as_tibble(rownames = "chr_range") %>%
    pivot_longer(cols = c(-chr_range, -id), names_to = "sample", values_to = "value") %>%
    mutate(value = as.numeric(value)) %>%
    data.frame()
```

## Depth quantiles (per match status) {style="font-size: 16px;"}

```{r}
tbl <- data %>% 
  group_by(id) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  mutate("% total" = (n/sum(.$n) * 100) %>% round(., 2)) %>%
  ungroup() %>%
  select(id, n, `% total`, everything())
  
lastidx <- nrow(tbl)+1
tbl[lastidx,"n"] <- sum(tbl$n)
tbl[lastidx,"id"] <- "total"

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## Depth quantiles (per match/sample status) {style="font-size: 16px;"}

```{r}
tbl <- data %>%
  filter(!is.na(value)) %>%
  group_by(id, sample) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, sample, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  ungroup() %>%
  group_by(sample) %>%
  mutate("% sample" = sum(n)) %>%
  group_by(id, sample) %>%
  mutate("% sample" = (n/`% sample` * 100) %>% round(.,2)) %>%
  ungroup() %>%
  select(id, sample, n, `% sample`, everything())

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## Depth Boxplots {style="font-size: 16px;"}

```{r, fig.width = 15, fig.height = 10}
input <- data %>%
  filter(!is.na(value)) %>%
  group_by(id) %>%
  mutate(n_id = length(unique(chr_range))) %>%
  ungroup() %>%
  group_by(id, sample) %>%
  mutate(
    n_id_samp = length(unique(chr_range)),
    Q75 = quantile(value, probs = 0.75),
    Q25 = quantile(value, probs = 0.25)
  ) %>%
  mutate(Whiskup = 1.05*(Q75 + 1.5*(Q75-Q25)))

input <- input %>% mutate(
  id = paste0(id," (n = ",n_id,")")
)

# Reorder levels for ID
id_levels <- c(
  grep(unique(input$id), pattern = "one_", value = TRUE), 
  grep(unique(input$id), pattern = "two_", value = TRUE),
  grep(unique(input$id), pattern = "three_", value = TRUE)
)

input <- input %>% 
  mutate(
    id = factor(id, levels = id_levels)
  )

# Reorder levels for Sample
sample_levels <- c(
  grep(unique(input$sample), pattern = "max|min", value = TRUE, invert = TRUE),
  "max",
  "min"
)

input <- input %>% 
  mutate(
    sample = factor(sample, levels = sample_levels)
  )

# Create label data
label_data <- input %>% 
  select(id, sample, n_id_samp, Q25, Q75, Whiskup) %>%
  distinct()

label_data <- label_data[order(label_data$id, label_data$sample),]

p <- ggplot(
    input,
    aes(
        x = sample,
        y = value
    )
) + 
ylab("depth") +
geom_boxplot(outliers = FALSE) +
facet_wrap(~id)

p <- p + 
  geom_text(
    data = label_data, aes(y = Whiskup, label = n_id_samp), position = position_dodge(width = .75)
  ) +
  coriell::theme_coriell()

suppressWarnings({
    print(p)
})
```

## Depth Histograms (per match status) {style="font-size: 16px;"}

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input %>% filter(value <= 75),
  aes(
    x = value,
    y = id
  )
) +
stat_binline(scale = 1, binwidth = 1) +
xlab("depth") +
coriell::theme_coriell()

p
```

## Depth Histograms (per match/sample status) {style="font-size: 16px;"}

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input %>% filter(value <= 75),
  aes(
    x = value,
    y = sample
  )
) +
stat_binline(scale = 1, binwidth = 1) +
xlab("depth") +
facet_wrap(~id) +
coriell::theme_coriell()

p
```

## GQ stats {.center}

```{r, include = FALSE}
data <- bind_rows(stats$gq_stats, .id = "id") %>%
    as_tibble(rownames = "chr_range") %>%
    pivot_longer(cols = c(-chr_range, -id), names_to = "sample", values_to = "value") %>%
    mutate(value = as.numeric(value)) %>%
    data.frame()
```

## GQ quantiles (per match status) {style="font-size: 16px;"}

```{r}
tbl <- data %>% 
  group_by(id) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  mutate("% total" = (n/sum(.$n) * 100) %>% round(., 2)) %>%
  ungroup() %>%
  select(id, n, `% total`, everything())
  
lastidx <- nrow(tbl)+1
tbl[lastidx,"n"] <- sum(tbl$n)
tbl[lastidx,"id"] <- "total"

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## GQ quantiles (per match/sample status) {style="font-size: 16px;"}

```{r}
tbl <- data %>%
  filter(!is.na(value)) %>%
  group_by(id, sample) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, sample, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  ungroup() %>%
  group_by(sample) %>%
  mutate("% sample" = sum(n)) %>%
  group_by(id, sample) %>%
  mutate("% sample" = (n/`% sample` * 100) %>% round(.,2)) %>%
  ungroup() %>%
  select(id, sample, n, `% sample`, everything())

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## GQ Boxplots {style="font-size: 16px;"}

```{r, fig.width = 15, fig.height = 10}
input <- data %>%
  filter(!is.na(value)) %>%
  group_by(id) %>%
  mutate(n_id = length(unique(chr_range))) %>%
  ungroup() %>%
  group_by(id, sample) %>%
  mutate(
    n_id_samp = length(unique(chr_range)),
    Q75 = quantile(value, probs = 0.75),
    Q25 = quantile(value, probs = 0.25)
  ) %>%
  mutate(Whiskup = 1.05*(Q75 + 1.5*(Q75-Q25)))

input <- input %>% mutate(
  id = paste0(id," (n = ",n_id,")")
)

# Reorder levels for ID
id_levels <- c(
  grep(unique(input$id), pattern = "one_", value = TRUE), 
  grep(unique(input$id), pattern = "two_", value = TRUE),
  grep(unique(input$id), pattern = "three_", value = TRUE)
)

input <- input %>% 
  mutate(
    id = factor(id, levels = id_levels)
  )

# Reorder levels for Sample
sample_levels <- c(
  grep(unique(input$sample), pattern = "max|min", value = TRUE, invert = TRUE),
  "max",
  "min"
)

input <- input %>% 
  mutate(
    sample = factor(sample, levels = sample_levels)
  )

# Create label data
label_data <- input %>% 
  select(id, sample, n_id_samp, Q25, Q75, Whiskup) %>%
  distinct()

label_data <- label_data[order(label_data$id, label_data$sample),]

p <- ggplot(
    input,
    aes(
        x = sample,
        y = value
    )
) + 
ylab("gq") +
geom_boxplot(outliers = FALSE) +
facet_wrap(~id)

p <- p + 
  geom_text(
    data = label_data, aes(y = Whiskup, label = n_id_samp), position = position_dodge(width = .75)
  ) +
  coriell::theme_coriell()

suppressWarnings({
    print(p)
})
```

## GQ Histograms (per match status)

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input,
  aes(
    x = value,
    y = id
  )
) +
stat_binline(scale = 1, binwidth = 1) +
coriell::theme_coriell()

p
```

## GQ Histograms (per match/sample status)

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input,
  aes(
    x = value,
    y = sample
  )
) +
stat_binline(scale = 1, binwidth = 1) +
facet_wrap(~id) +
coriell::theme_coriell()

p
```

## Compare HG005: HM24631, HM26107 {style="font-size: 16px;"}

- HM24631: LCL
- HM26107: iPSC from LCL

```{r, include = FALSE}
stats <- readRDS(here("results/08/HG005/HG005_stats.rds"))
```

## Depth stats {.center}

```{r, include = FALSE}
data <- bind_rows(stats$dp_stats, .id = "id") %>%
    as_tibble(rownames = "chr_range") %>%
    pivot_longer(cols = c(-chr_range, -id), names_to = "sample", values_to = "value") %>%
    mutate(value = as.numeric(value)) %>%
    data.frame()
```

## Depth quantiles (per match status) {style="font-size: 16px;"}

```{r}
tbl <- data %>% 
  group_by(id) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  mutate("% total" = (n/sum(.$n) * 100) %>% round(., 2)) %>%
  ungroup() %>%
  select(id, n, `% total`, everything())
  
lastidx <- nrow(tbl)+1
tbl[lastidx,"n"] <- sum(tbl$n)
tbl[lastidx,"id"] <- "total"

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## Depth quantiles (per match/sample status) {style="font-size: 16px;"}

```{r}
tbl <- data %>%
  filter(!is.na(value)) %>%
  group_by(id, sample) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, sample, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  ungroup() %>%
  group_by(sample) %>%
  mutate("% sample" = sum(n)) %>%
  group_by(id, sample) %>%
  mutate("% sample" = (n/`% sample` * 100) %>% round(.,2)) %>%
  ungroup() %>%
  select(id, sample, n, `% sample`, everything())

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## Depth Boxplots {style="font-size: 16px;"}

```{r, fig.width = 15, fig.height = 10}
input <- data %>%
  filter(!is.na(value)) %>%
  group_by(id) %>%
  mutate(n_id = length(unique(chr_range))) %>%
  ungroup() %>%
  group_by(id, sample) %>%
  mutate(
    n_id_samp = length(unique(chr_range)),
    Q75 = quantile(value, probs = 0.75),
    Q25 = quantile(value, probs = 0.25)
  ) %>%
  mutate(Whiskup = 1.05*(Q75 + 1.5*(Q75-Q25)))

input <- input %>% mutate(
  id = paste0(id," (n = ",n_id,")")
)

# Reorder levels for ID
id_levels <- c(
  grep(unique(input$id), pattern = "one_", value = TRUE), 
  grep(unique(input$id), pattern = "two_", value = TRUE),
  grep(unique(input$id), pattern = "three_", value = TRUE)
)

input <- input %>% 
  mutate(
    id = factor(id, levels = id_levels)
  )

# Reorder levels for Sample
sample_levels <- c(
  grep(unique(input$sample), pattern = "max|min", value = TRUE, invert = TRUE),
  "max",
  "min"
)

input <- input %>% 
  mutate(
    sample = factor(sample, levels = sample_levels)
  )

# Create label data
label_data <- input %>% 
  select(id, sample, n_id_samp, Q25, Q75, Whiskup) %>%
  distinct()

label_data <- label_data[order(label_data$id, label_data$sample),]

p <- ggplot(
    input,
    aes(
        x = sample,
        y = value
    )
) + 
ylab("depth") +
geom_boxplot(outliers = FALSE) +
facet_wrap(~id)

p <- p + 
  geom_text(
    data = label_data, aes(y = Whiskup, label = n_id_samp), position = position_dodge(width = .75)
  ) +
  coriell::theme_coriell()

suppressWarnings({
    print(p)
})
```

## Depth Histograms (per match status) {style="font-size: 16px;"}

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input %>% filter(value <= 75),
  aes(
    x = value,
    y = id
  )
) +
stat_binline(scale = 1, binwidth = 1) +
xlab("depth") +
coriell::theme_coriell()

p
```

## Depth Histograms (per match/sample status) {style="font-size: 16px;"}

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input %>% filter(value <= 75),
  aes(
    x = value,
    y = sample
  )
) +
stat_binline(scale = 1, binwidth = 1) +
xlab("depth") +
facet_wrap(~id) +
coriell::theme_coriell()

p
```

## GQ stats {.center}

```{r, include = FALSE}
data <- bind_rows(stats$gq_stats, .id = "id") %>%
    as_tibble(rownames = "chr_range") %>%
    pivot_longer(cols = c(-chr_range, -id), names_to = "sample", values_to = "value") %>%
    mutate(value = as.numeric(value)) %>%
    data.frame()
```

## GQ quantiles (per match status) {style="font-size: 16px;"}

```{r}
tbl <- data %>% 
  group_by(id) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  mutate("% total" = (n/sum(.$n) * 100) %>% round(., 2)) %>%
  ungroup() %>%
  select(id, n, `% total`, everything())
  
lastidx <- nrow(tbl)+1
tbl[lastidx,"n"] <- sum(tbl$n)
tbl[lastidx,"id"] <- "total"

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## GQ quantiles (per match/sample status) {style="font-size: 16px;"}

```{r}
tbl <- data %>%
  filter(!is.na(value)) %>%
  group_by(id, sample) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, sample, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  ungroup() %>%
  group_by(sample) %>%
  mutate("% sample" = sum(n)) %>%
  group_by(id, sample) %>%
  mutate("% sample" = (n/`% sample` * 100) %>% round(.,2)) %>%
  ungroup() %>%
  select(id, sample, n, `% sample`, everything())

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## GQ Boxplots {style="font-size: 16px;"}

```{r, fig.width = 15, fig.height = 10}
input <- data %>%
  filter(!is.na(value)) %>%
  group_by(id) %>%
  mutate(n_id = length(unique(chr_range))) %>%
  ungroup() %>%
  group_by(id, sample) %>%
  mutate(
    n_id_samp = length(unique(chr_range)),
    Q75 = quantile(value, probs = 0.75),
    Q25 = quantile(value, probs = 0.25)
  ) %>%
  mutate(Whiskup = 1.05*(Q75 + 1.5*(Q75-Q25)))

input <- input %>% mutate(
  id = paste0(id," (n = ",n_id,")")
)

# Reorder levels for ID
id_levels <- c(
  grep(unique(input$id), pattern = "one_", value = TRUE), 
  grep(unique(input$id), pattern = "two_", value = TRUE),
  grep(unique(input$id), pattern = "three_", value = TRUE)
)

input <- input %>% 
  mutate(
    id = factor(id, levels = id_levels)
  )

# Reorder levels for Sample
sample_levels <- c(
  grep(unique(input$sample), pattern = "max|min", value = TRUE, invert = TRUE),
  "max",
  "min"
)

input <- input %>% 
  mutate(
    sample = factor(sample, levels = sample_levels)
  )

# Create label data
label_data <- input %>% 
  select(id, sample, n_id_samp, Q25, Q75, Whiskup) %>%
  distinct()

label_data <- label_data[order(label_data$id, label_data$sample),]

p <- ggplot(
    input,
    aes(
        x = sample,
        y = value
    )
) + 
ylab("gq") +
geom_boxplot(outliers = FALSE) +
facet_wrap(~id)

p <- p + 
  geom_text(
    data = label_data, aes(y = Whiskup, label = n_id_samp), position = position_dodge(width = .75)
  ) +
  coriell::theme_coriell()

suppressWarnings({
    print(p)
})
```

## GQ Histograms (per match status)

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input,
  aes(
    x = value,
    y = id
  )
) +
stat_binline(scale = 1, binwidth = 1) +
coriell::theme_coriell()

p
```

## GQ Histograms (per match/sample status)

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input,
  aes(
    x = value,
    y = sample
  )
) +
stat_binline(scale = 1, binwidth = 1) +
facet_wrap(~id) +
coriell::theme_coriell()

p
```

## Compare Fibroblast: HM20431, HM23248_2, HM23338 {style="font-size: 16px;"}

- HM20431: LCL from Fibroblast
- HM23248_2: 
- HM23338: iPSC from Fibroblast

```{r, include = FALSE}
stats <- readRDS(here("results/08/Fibroblast/Fibroblast_stats.rds"))
```

## Depth stats {.center}

```{r, include = FALSE}
data <- bind_rows(stats$dp_stats, .id = "id") %>%
    as_tibble(rownames = "chr_range") %>%
    pivot_longer(cols = c(-chr_range, -id), names_to = "sample", values_to = "value") %>%
    mutate(value = as.numeric(value)) %>%
    data.frame()
```

## Depth quantiles (per match status) {style="font-size: 16px;"}

```{r}
tbl <- data %>% 
  group_by(id) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  mutate("% total" = (n/sum(.$n) * 100) %>% round(., 2)) %>%
  ungroup() %>%
  select(id, n, `% total`, everything())
  
lastidx <- nrow(tbl)+1
tbl[lastidx,"n"] <- sum(tbl$n)
tbl[lastidx,"id"] <- "total"

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## Depth quantiles (per match/sample status) {style="font-size: 16px;"}

```{r}
tbl <- data %>%
  filter(!is.na(value)) %>%
  group_by(id, sample) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, sample, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  ungroup() %>%
  group_by(sample) %>%
  mutate("% sample" = sum(n)) %>%
  group_by(id, sample) %>%
  mutate("% sample" = (n/`% sample` * 100) %>% round(.,2)) %>%
  ungroup() %>%
  select(id, sample, n, `% sample`, everything())

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## Depth Boxplots {style="font-size: 16px;"}

```{r, fig.width = 15, fig.height = 10}
input <- data %>%
  filter(!is.na(value)) %>%
  group_by(id) %>%
  mutate(n_id = length(unique(chr_range))) %>%
  ungroup() %>%
  group_by(id, sample) %>%
  mutate(
    n_id_samp = length(unique(chr_range)),
    Q75 = quantile(value, probs = 0.75),
    Q25 = quantile(value, probs = 0.25)
  ) %>%
  mutate(Whiskup = 1.05*(Q75 + 1.5*(Q75-Q25)))

input <- input %>% mutate(
  id = paste0(id," (n = ",n_id,")")
)

# Reorder levels for ID
id_levels <- c(
  grep(unique(input$id), pattern = "one_", value = TRUE), 
  grep(unique(input$id), pattern = "two_", value = TRUE),
  grep(unique(input$id), pattern = "three_", value = TRUE)
)

input <- input %>% 
  mutate(
    id = factor(id, levels = id_levels)
  )

# Reorder levels for Sample
sample_levels <- c(
  grep(unique(input$sample), pattern = "max|min", value = TRUE, invert = TRUE),
  "max",
  "min"
)

input <- input %>% 
  mutate(
    sample = factor(sample, levels = sample_levels)
  )

# Create label data
label_data <- input %>% 
  select(id, sample, n_id_samp, Q25, Q75, Whiskup) %>%
  distinct()

label_data <- label_data[order(label_data$id, label_data$sample),]

p <- ggplot(
    input,
    aes(
        x = sample,
        y = value
    )
) + 
ylab("depth") +
geom_boxplot(outliers = FALSE) +
facet_wrap(~id)

p <- p + 
  geom_text(
    data = label_data, aes(y = Whiskup, label = n_id_samp), position = position_dodge(width = .75)
  ) +
  coriell::theme_coriell()

suppressWarnings({
    print(p)
})
```

## Depth Histograms (per match status) {style="font-size: 16px;"}

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input %>% filter(value <= 75),
  aes(
    x = value,
    y = id
  )
) +
stat_binline(scale = 1, binwidth = 1) +
xlab("depth") +
coriell::theme_coriell()

p
```

## Depth Histograms (per match/sample status) {style="font-size: 16px;"}

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input %>% filter(value <= 75),
  aes(
    x = value,
    y = sample
  )
) +
stat_binline(scale = 1, binwidth = 1) +
xlab("depth") +
facet_wrap(~id) +
coriell::theme_coriell()

p
```

## GQ stats {.center}

```{r, include = FALSE}
data <- bind_rows(stats$gq_stats, .id = "id") %>%
    as_tibble(rownames = "chr_range") %>%
    pivot_longer(cols = c(-chr_range, -id), names_to = "sample", values_to = "value") %>%
    mutate(value = as.numeric(value)) %>%
    data.frame()
```

## GQ quantiles (per match status) {style="font-size: 16px;"}

```{r}
tbl <- data %>% 
  group_by(id) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  mutate("% total" = (n/sum(.$n) * 100) %>% round(., 2)) %>%
  ungroup() %>%
  select(id, n, `% total`, everything())
  
lastidx <- nrow(tbl)+1
tbl[lastidx,"n"] <- sum(tbl$n)
tbl[lastidx,"id"] <- "total"

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## GQ quantiles (per match/sample status) {style="font-size: 16px;"}

```{r}
tbl <- data %>%
  filter(!is.na(value)) %>%
  group_by(id, sample) %>%
  mutate(n = length(unique(chr_range))) %>%
  group_by(id, sample, n) %>%
  group_modify(~as.data.frame(t(quantile(.$value, na.rm = TRUE)))) %>%
  ungroup() %>%
  group_by(sample) %>%
  mutate("% sample" = sum(n)) %>%
  group_by(id, sample) %>%
  mutate("% sample" = (n/`% sample` * 100) %>% round(.,2)) %>%
  ungroup() %>%
  select(id, sample, n, `% sample`, everything())

gt(tbl) %>%
  sub_missing(
    columns = everything(),
    rows = everything(),
    missing_text = "---"
  )
```

## GQ Boxplots {style="font-size: 16px;"}

```{r, fig.width = 15, fig.height = 10}
input <- data %>%
  filter(!is.na(value)) %>%
  group_by(id) %>%
  mutate(n_id = length(unique(chr_range))) %>%
  ungroup() %>%
  group_by(id, sample) %>%
  mutate(
    n_id_samp = length(unique(chr_range)),
    Q75 = quantile(value, probs = 0.75),
    Q25 = quantile(value, probs = 0.25)
  ) %>%
  mutate(Whiskup = 1.05*(Q75 + 1.5*(Q75-Q25)))

input <- input %>% mutate(
  id = paste0(id," (n = ",n_id,")")
)

# Reorder levels for ID
id_levels <- c(
  grep(unique(input$id), pattern = "one_", value = TRUE), 
  grep(unique(input$id), pattern = "two_", value = TRUE),
  grep(unique(input$id), pattern = "three_", value = TRUE)
)

input <- input %>% 
  mutate(
    id = factor(id, levels = id_levels)
  )

# Reorder levels for Sample
sample_levels <- c(
  grep(unique(input$sample), pattern = "max|min", value = TRUE, invert = TRUE),
  "max",
  "min"
)

input <- input %>% 
  mutate(
    sample = factor(sample, levels = sample_levels)
  )

# Create label data
label_data <- input %>% 
  select(id, sample, n_id_samp, Q25, Q75, Whiskup) %>%
  distinct()

label_data <- label_data[order(label_data$id, label_data$sample),]

p <- ggplot(
    input,
    aes(
        x = sample,
        y = value
    )
) + 
ylab("gq") +
geom_boxplot(outliers = FALSE) +
facet_wrap(~id)

p <- p + 
  geom_text(
    data = label_data, aes(y = Whiskup, label = n_id_samp), position = position_dodge(width = .75)
  ) +
  coriell::theme_coriell()

suppressWarnings({
    print(p)
})
```

## GQ Histograms (per match status)

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input,
  aes(
    x = value,
    y = id
  )
) +
stat_binline(scale = 1, binwidth = 1) +
coriell::theme_coriell()

p
```

## GQ Histograms (per match/sample status)

```{r, fig.height = 15, fig.width = 10}
p <- ggplot(
  input,
  aes(
    x = value,
    y = sample
  )
) +
stat_binline(scale = 1, binwidth = 1) +
facet_wrap(~id) +
coriell::theme_coriell()

p
```

## CYP2D6 Coverage 

```{r echo=FALSE, out.width='100%'}
#| fig-align: center

knitr::include_graphics(here("output/figures/2024-04-03_cyp2d6_plot/plot.png"))
```